<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Experience</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
     <%- include('../partials/navbar') %>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
       --primary-color: #2563eb;
      --primary-light: #3b82f6;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      /* background: linear-gradient(135deg, #f4f6fc 0%, #f0f0f5 100%); */
      min-height: 100vh;
      padding: 20px;
    }

    .container {
      max-width: 900px;
      margin: 0 auto;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      border-radius: 24px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
           margin: 2rem auto;
  margin-top: 100px; /* ensures space for fixed navbar */
  max-width: 900px;
      overflow: hidden;
    }
    
    .header {
      background: linear-gradient(135deg, #2563eb 0%, #3b82f6 100%);
      color: white;
      padding: 40px;
      text-align: center;
      position: relative;
    }

    .header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
      opacity: 0.5;
    }

    .header h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 10px;
      position: relative;
      z-index: 1;
    }

    .header p {
      font-size: 1.1rem;
      opacity: 0.9;
      position: relative;
      z-index: 1;
    }

    .progress-container {
      padding: 20px 40px;
      background: #f8fafc;
      border-bottom: 1px solid #e2e8f0;
    }

    .progress-bar {
      width: 100%;
      height: 8px;
      background: #e2e8f0;
      border-radius: 4px;
      overflow: hidden;
      margin-bottom: 10px;
    }

    .progress-fill {
      height: 100%;
      background: linear-gradient(90deg, #2563eb, #3b82f6);
      width: 0%;
      transition: width 0.3s ease;
      border-radius: 4px;
    }

    .progress-text {
      text-align: center;
      font-size: 0.9rem;
      color: #64748b;
      font-weight: 500;
    }

    .form-container {
      padding: 40px;
    }

    .form-grid {
      display: grid;
      gap: 30px;
    }

    .form-group {
      position: relative;
    }

    .form-label {
      display: block;
      font-weight: 600;
      color: #374151;
      margin-bottom: 8px;
      font-size: 0.95rem;
    }

    .form-label i {
      margin-right: 8px;
      color: #2563eb;
      width: 16px;
    }

    .form-input,
    .form-select,
    .form-textarea {
      width: 100%;
      padding: 16px 20px;
      border: 2px solid #e5e7eb;
      border-radius: 12px;
      font-size: 1rem;
      transition: all 0.3s ease;
      background: white;
      font-family: inherit;
    }

    .form-input:focus,
    .form-select:focus,
    .form-textarea:focus {
      outline: none;
      border-color: #6366f1;
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
      transform: translateY(-1px);
    }

    .form-textarea {
      resize: vertical;
      min-height: 120px;
      line-height: 1.6;
    }

    .skills-container {
      position: relative;
    }

    .skills-input-wrapper {
      position: relative;
    }

    .skills-tags {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin-top: 12px;
      min-height: 40px;
      padding: 12px;
      border: 2px dashed #d1d5db;
      border-radius: 12px;
      background: #f9fafb;
    }

    .skill-tag {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      background: linear-gradient(135deg, #6366f1, #8b5cf6);
      color: white;
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 0.85rem;
      font-weight: 500;
      animation: slideIn 0.3s ease;
    }

    .skill-tag button {
      background: none;
      border: none;
      color: white;
      font-size: 1.2rem;
      cursor: pointer;
      padding: 0;
      width: 20px;
      height: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      transition: background 0.2s ease;
    }

    .skill-tag button:hover {
      background: rgba(255, 255, 255, 0.2);
    }

    .other-company {
      margin-top: 15px;
      display: none;
      animation: slideDown 0.3s ease;
    }

    .submit-section {
      margin-top: 40px;
      text-align: center;
      padding-top: 30px;
      border-top: 2px solid #f1f5f9;
    }

    .btn-submit {
      background: linear-gradient(135deg, #2563eb 0%, #3b82f6 100%);
      color: white;
      border: none;
      padding: 16px 40px;
      font-size: 1.1rem;
      font-weight: 600;
      border-radius: 12px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
      min-width: 200px;
    }

    .btn-submit:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(79, 70, 229, 0.4);
    }

    .btn-submit:active {
      transform: translateY(0);
    }

    .btn-submit:disabled {
      opacity: 0.7;
      cursor: not-allowed;
      transform: none;
    }

    .form-hint {
      font-size: 0.85rem;
      color: #6b7280;
      margin-top: 6px;
      font-style: italic;
    }

    .two-column {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateX(-20px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    @keyframes slideDown {
      from {
        opacity: 0;
        max-height: 0;
      }
      to {
        opacity: 1;
        max-height: 100px;
      }
    }

    @media (max-width: 768px) {
      .container {
        margin: 10px;
        border-radius: 16px;
      }

      .header {
        padding: 30px 20px;
      }

      .header h1 {
        font-size: 2rem;
      }

      .form-container {
        padding: 20px;
      }

      .two-column {
        grid-template-columns: 1fr;
        gap: 15px;
      }

      .progress-container {
        padding: 15px 20px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1><i class="fas fa-edit"></i> Edit Experience</h1>
      <p>Update your placement journey and help future candidates</p>
    </div>

    <div class="progress-container">
      <div class="progress-bar">
        <div class="progress-fill" id="progressBar"></div>
      </div>
      <div class="progress-text">Complete your profile</div>
    </div>

    <div class="form-container">
      <form id="experienceForm" action="/student/edit/<%= userData._id %>?_method=PUT" method="POST">
        <div class="form-grid">
          
          <!-- Personal Information Section -->
          <div class="two-column">
            <div class="form-group">
              <label class="form-label">
                <i class="fas fa-user"></i>Candidate Name
              </label>
              <input type="text" name="name" id="name" class="form-input" value="<%= userData.name %>" required>
            </div>
            
            <div class="form-group">
              <label class="form-label">
                <i class="fas fa-id-card"></i>Registration Number
              </label>
              <input type="text" name="regno" id="regno" class="form-input" value="<%= userData.regno %>" required>
            </div>
          </div>

          <div class="form-group">
            <label class="form-label">
              <i class="fas fa-envelope"></i>Email Address
            </label>
            <input type="email" name="email" id="email" class="form-input" value="<%= userData.email %>" required>
          </div>

          <!-- Company and Domain Section -->
          <div class="two-column">
            <div class="form-group">
              <label class="form-label">
                <i class="fas fa-building"></i>Company
              </label>
              <select name="company" id="company" class="form-select" required>
                <option value="" disabled <%= !userData.company ? 'selected' : '' %>>Select company</option>
                <option value="TCS" <%= userData.company === 'TCS' ? 'selected' : '' %>>TCS</option>
                <option value="Infosys" <%= userData.company === 'Infosys' ? 'selected' : '' %>>Infosys</option>
                <option value="Wipro" <%= userData.company === 'Wipro' ? 'selected' : '' %>>Wipro</option>
              </select>
              
              <div id="otherCompanyDiv" class="other-company">
                <input type="text" id="otherCompany" class="form-input" placeholder="Enter company name">
              </div>
            </div>

            <div class="form-group">
              <label class="form-label">
                <i class="fas fa-code"></i>Domain
              </label>
              <input type="text" name="domain" class="form-input" value="<%= userData.domain %>" placeholder="e.g., DSA, Web Development, ML" required>
              <div class="form-hint">Primary technical domain that helped in your selection</div>
            </div>
          </div>

          <!-- Academic and Career Info -->
          <div class="two-column">
            <div class="form-group">
              <label class="form-label">
                <i class="fas fa-graduation-cap"></i>Graduation Year
              </label>
              <input type="number" name="year" class="form-input" min="2020" max="2030" value="<%= userData.year %>" required>
            </div>

            <div class="form-group">
              <label class="form-label">
                <i class="fas fa-briefcase"></i>Position Type
              </label>
              <select name="type" class="form-select" required>
                <option value="" disabled <%= !userData.type ? 'selected' : '' %>>Select type</option>
                <option value="6 Months Intern only" <%= userData.type === '6 Months Intern only' ? 'selected' : '' %>>6 Months Intern only</option>
                <option value="Intern + FTE" <%= userData.type === 'Intern + FTE' ? 'selected' : '' %>>Intern + FTE</option>
                <option value="FTE only" <%= userData.type === 'FTE only' ? 'selected' : '' %>>FTE only</option>
              </select>
            </div>
          </div>

          <!-- Skills Section -->
          <div class="form-group skills-container">
            <label class="form-label">
              <i class="fas fa-star"></i>Key Skills That Helped in Interview
            </label>
            <div class="skills-input-wrapper">
              <input type="text" id="skillsInput" class="form-input" placeholder="Type a skill and press Enter">
              <input type="hidden" name="skills" id="skillsHidden">
            </div>
            <div id="skillsTags" class="skills-tags">
              <div style="color: #9ca3af; font-size: 0.9rem;">Add skills that were crucial for your selection...</div>
            </div>
          </div>

          <!-- Experience Sections -->
          <div class="form-group">
            <label class="form-label">
              <i class="fas fa-chart-line"></i>Preparation Strategy
            </label>
            <textarea name="preparationStrategy" class="form-textarea" required><%= userData.preparationStrategy %></textarea>
            <div class="form-hint">Describe your study plan, timeline, and approach</div>
          </div>

          <div class="form-group">
            <label class="form-label">
              <i class="fas fa-handshake"></i>Placement Drive Experience
            </label>
            <textarea name="placementExperience" class="form-textarea" required><%= userData.placementExperience %></textarea>
            <div class="form-hint">Share your interview rounds, questions asked, and overall experience</div>
          </div>

          <div class="form-group">
            <label class="form-label">
              <i class="fas fa-lightbulb"></i>Tips and Tricks
            </label>
            <textarea name="tipsAndTricks" class="form-textarea" required><%= userData.tipsAndTricks %></textarea>
            <div class="form-hint">What would you advise someone preparing for similar roles?</div>
          </div>

          <div class="form-group">
            <label class="form-label">
              <i class="fas fa-play-circle"></i>Preparation Resources
            </label>
            <textarea name="preparationPlaylist" class="form-textarea" required><%= userData.preparationPlaylist %></textarea>
            <div class="form-hint">Share helpful courses, videos, books, or websites</div>
          </div>

          <div class="form-group">
            <label class="form-label">
              <i class="fas fa-gift"></i>Additional Insights
            </label>
            <textarea name="bonus" class="form-textarea" required><%= userData.bonus %></textarea>
            <div class="form-hint">Any extra advice, mistakes to avoid, or success factors</div>
          </div>

          <input type="hidden" name="visibility" value="<%= userData.visibility || 'None' %>">
        </div>

        <div class="submit-section">
          <button type="submit" class="btn-submit">
            <i class="fas fa-save"></i> Update Experience
          </button>
        </div>
      </form>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // ================== COMPANY DROPDOWN ===================
      const companyNames = [
        "ACCENTURE", "ACCOLITE", "AMAZON", "AMERICAN EXPRESS", "APPIAN", "APPLE", "APTIV", "ARCADIA", "ATHENAHEALTH",
        "BANK OF AMERICA", "BARCLAYS", "BLUE YONDER", "BNY", "CATERPILLAR", "CHRONUS", "CITI", "CODESTAX.AI", "COMPLYANCE",
        "CONGRUENT", "D. E. SHAW", "DOVER", "EUCLOID DATA SOLUTIONS", "FEDEX", "FIDELITY", "FORD", "GAVS", "GIGAMON",
        "ICANIO TECHNOLOGIES", "IDFC FIRST BANK", "INFINERA", "J K FENNER", "JOHN DEERE", "KLA", "LARSEN & TURBO", "LATENTVIEW",
        "LISTER TECHNOLOGIES", "LOGITECH", "MINDGATE", "MORGAN STANLEY", "NCR VOYIX", "NORTONLIFELOCK", "OPTUM", "ORACLE",
        "RAMCO SYSTEMS", "RANDOMWALK.AI", "SAGENT", "SAP LABS", "SEARCE", "SECUREW2", "SOCIETE GENERALE", "STANDARD CHARTERED GBS",
        "STARTENS SYSTEM", "TATA DIGITAL", "TCS", "TEJAS NETWORKS", "TEKION", "TRIMBLE", "VEGROW", "VERIZON", "VIASAT", "VISA",
        "VIVRITI CAPITAL", "VOLVO", "WALMART", "WELLS FARGO", "ZOOMRX"
      ];

      const companySelect = document.getElementById("company");
      const otherCompanyDiv = document.getElementById("otherCompanyDiv");
      const otherCompanyInput = document.getElementById("otherCompany");
      const form = document.getElementById("experienceForm");

      // Clear existing options except the first ones
      const existingOptions = Array.from(companySelect.options);
      
      // Populate dropdown with all companies
      companyNames.forEach(company => {
        // Check if option already exists
        const exists = existingOptions.some(option => option.value === company);
        if (!exists) {
          const option = document.createElement("option");
          option.value = company;
          option.textContent = company;
          // Check if this was the selected company
          if ('<%= userData.company %>' === company) {
            option.selected = true;
          }
          companySelect.appendChild(option);
        }
      });

      // Add "Others" option
      const othersOption = document.createElement("option");
      othersOption.value = "Others";
      othersOption.textContent = "Others";
      companySelect.appendChild(othersOption);

      // Show/hide input for "Others"
      companySelect.addEventListener("change", () => {
        if (companySelect.value === "Others") {
          otherCompanyDiv.style.display = "block";
          otherCompanyInput.required = true;
        } else {
          otherCompanyDiv.style.display = "none";
          otherCompanyInput.required = false;
        }
        updateProgress();
      });

      // ============== AUTO-FILL USER DATA ================
      const userData = {
        name: '<%= typeof user !== "undefined" && user.name ? user.name : "" %>',
        regno: '<%= typeof user !== "undefined" && user.regno ? user.regno : "" %>',
        email: '<%= typeof user !== "undefined" && user.email ? user.email : "" %>'
      };

      if (userData.name && !document.getElementById('name').value) {
        document.getElementById('name').value = userData.name;
      }
      if (userData.regno && !document.getElementById('regno').value) {
        document.getElementById('regno').value = userData.regno;
      }
      if (userData.email && !document.getElementById('email').value) {
        document.getElementById('email').value = userData.email;
      }

      // ============== SKILLS INPUT HANDLING ===============
      let skills = [];
      const skillsInput = document.getElementById('skillsInput');
      const skillsHidden = document.getElementById('skillsHidden');
      const skillsTags = document.getElementById('skillsTags');

      function updateSkillsDisplay() {
        skillsTags.innerHTML = '';
        if (skills.length === 0) {
          skillsTags.innerHTML = '<div style="color: #9ca3af; font-size: 0.9rem;">Add skills that were crucial for your selection...</div>';
        } else {
          skills.forEach((skill, index) => {
            const tag = document.createElement('div');
            tag.className = 'skill-tag';
            tag.innerHTML = `${skill} <button type="button" onclick="removeSkill(${index})">×</button>`;
            skillsTags.appendChild(tag);
          });
        }
        skillsHidden.value = skills.join(',');
        updateProgress();
      }

      window.removeSkill = function (index) {
        skills.splice(index, 1);
        updateSkillsDisplay();
      }

      skillsInput.addEventListener('keypress', function (e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          addSkill(this.value);
          this.value = '';
        }
      });

      skillsInput.addEventListener('blur', function () {
        if (this.value.trim()) {
          addSkill(this.value);
          this.value = '';
        }
      });

      function addSkill(skill) {
        const trimmed = skill.trim();
        if (trimmed && !skills.includes(trimmed)) {
          skills.push(trimmed);
          updateSkillsDisplay();
        }
      }

      // ============= PROGRESS BAR TRACKING ================
      const progressBar = document.getElementById('progressBar');
      const formInputs = form.querySelectorAll('input[required], select[required], textarea[required]');

      function updateProgress() {
        let filled = 0;
        formInputs.forEach(input => {
          if (input.value.trim() !== '') filled++;
        });
        if (skills.length > 0) filled++;
        const total = formInputs.length + 1;
        const progress = (filled / total) * 100;
        progressBar.style.width = progress + '%';
      }

      formInputs.forEach(input => {
        input.addEventListener('input', updateProgress);
        input.addEventListener('change', updateProgress);
      });

      // ============ FORM SUBMISSION VALIDATION =============
      form.addEventListener("submit", function (e) {
        if (companySelect.value === "Others") {
          const customCompany = otherCompanyInput.value.trim();
          if (!customCompany) {
            e.preventDefault();
            alert("Please enter the company name.");
            otherCompanyInput.focus();
            return;
          }
          // Create a new option and select it
          const customOption = new Option(customCompany, customCompany, true, true);
          companySelect.appendChild(customOption);
          companySelect.value = customCompany;
        }

        if (skills.length === 0) {
          e.preventDefault();
          alert('Please add at least one skill that helped you in the interview.');
          skillsInput.focus();
          return;
        }

        const submitBtn = form.querySelector('.btn-submit');
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
        submitBtn.disabled = true;
      });

      // =========== TEXTAREA AUTO-RESIZE ============
      const textareas = document.querySelectorAll('textarea');
      textareas.forEach(textarea => {
        textarea.addEventListener('input', function () {
          this.style.height = 'auto';
          this.style.height = Math.max(this.scrollHeight, 120) + 'px';
        });
        
        // Initial resize
        textarea.style.height = 'auto';
        textarea.style.height = Math.max(textarea.scrollHeight, 120) + 'px';
      });

      // Initial Progress
      updateProgress();
    });
  </script>
</body>
</html>