<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Experience Table | PrepNPlace</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
         <%- include('../partials/navbar') %>

   <style>
        /* Add these CSS variables at the top of your style section */
:root {
     --primary-color: #2563eb;
      --primary-light: #3b82f6;
    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    --border-color: rgba(255, 255, 255, 0.2);
}
/* Update your navbar CSS to include these properties */
.custom-navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
    padding: 1rem 2rem;
    color: white;
    box-shadow: var(--shadow-md);
    border-bottom: 1px solid var(--border-color);
    position: relative;
    z-index: 1000;
    width: 100%;
}
        body {
            background: #f8f9fa;
            font-family: Arial, sans-serif;
        }
        
        .main-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            padding: 30px;
            margin: 30px auto;
            max-width: 1400px;
        }
        
        .page-title {
            text-align: center;
            margin-bottom: 30px;
            font-weight: bold;
            color: #333;
            font-size: 2rem;
        }
        
        .search-container {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 25px;
        }
        
        .search-input {
            border-radius: 8px;
            border: 1px solid #ddd;
            padding: 12px 15px;
            font-size: 16px;
        }
        
        .search-input:focus {
            border-color: #007BFF;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
        }
        
        .btn-custom {
            border-radius: 8px;
            padding: 12px 20px;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        
        .btn-primary-custom {
            background: #007BFF;
            border: none;
            color: white;
        }
        
        .btn-primary-custom:hover {
            background: #0056b3;
            transform: translateY(-1px);
        }
        
        .btn-danger-custom {
            background: #dc3545;
            border: none;
            color: white;
        }
        
        .btn-danger-custom:hover {
            background: #c82333;
            transform: translateY(-1px);
        }
        
        .table-container {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .table-custom {
            margin-bottom: 0;
            border: none;
        }
        
        .table-custom thead {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .table-custom thead th {
            border: none;
            padding: 15px 12px;
            font-weight: 600;
            text-align: center;
            vertical-align: middle;
        }
        
        .table-custom tbody tr {
            transition: all 0.3s ease;
        }
        
        .table-custom tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.01);
        }
        
        .table-custom tbody td {
            padding: 12px;
            vertical-align: middle;
            text-align: center;
        }
        
        .table-custom tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        
        .action-btn {
            padding: 6px 12px;
            border-radius: 6px;
            text-decoration: none;
            font-size: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
            margin: 2px;
            display: inline-block;
        }
        
        .btn-preview {
            background: #6c757d;
            color: white;
        }
        
        .btn-preview:hover {
            background: #545b62;
            color: white;
        }
        
        .btn-edit {
            background: #ffc107;
            color: #212529;
        }
        
        .btn-edit:hover {
            background: #e0a800;
            color: #212529;
        }
        
        .btn-delete {
            background: #dc3545;
            color: white;
        }
        
        .btn-delete:hover {
            background: #c82333;
            color: white;
        }
        
        .no-results {
            text-align: center;
            padding: 40px;
            color: #6c757d;
            font-style: italic;
        }
        
        .header-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 15px;
        }
        
        @media (max-width: 768px) {
            .main-container {
                margin: 15px;
                padding: 20px;
            }
            
            .header-actions {
                flex-direction: column;
                align-items: stretch;
            }
            
            .table-responsive {
                font-size: 14px;
            }
            
            .action-btn {
                padding: 4px 8px;
                font-size: 11px;
            }
        }


        /*Mobile Screen */
        /* Mobile-first responsive design */
/* Mobile-first responsive design - Updated with fixes */
@media (max-width: 991px) {
    .main-container {
        margin: 10px;
        padding: 15px;
        border-radius: 8px;
    }
    
    .page-title {
        font-size: 1.5rem;
        margin-bottom: 20px;
    }
    
    .search-container {
        padding: 15px;
        margin-bottom: 20px;
    }
    
    .header-actions {
        flex-direction: column;
        gap: 10px;
    }
    
    .header-actions > div {
        width: 100%;
    }
    
    .btn-custom {
        width: 100%;
        justify-content: center;
        padding: 10px 15px;
    }
}

@media (max-width: 768px) {
    /* Hide the default table on mobile */
    .table-container {
        display: none !important;
    }
    
    /* Create card-based layout for mobile */
    .mobile-card-container {
        display: block !important;
    }
    
    /* Fix welcome text styling */
    .header-actions .d-flex.align-items-center h4 {
        text-align: center;
        width: 100%;
        margin: 0;
        padding: 10px 0;
        font-size: 1.2rem;
        color: #333;
    }
    
    .experience-card {
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        margin-bottom: 15px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }
    
    .experience-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }
    
    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
        padding-bottom: 15px;
        border-bottom: 1px solid #f0f0f0;
    }
    
    .card-sno {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 8px 12px;
        border-radius: 20px;
        font-weight: bold;
        font-size: 0.9rem;
        min-width: 45px;
        text-align: center;
    }
    
    .card-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
        margin: 0;
        flex: 1;
        margin-left: 15px;
    }
    
    .card-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 12px;
        margin-bottom: 20px;
    }
    
    .detail-item {
        display: flex;
        flex-direction: column;
    }
    
    .detail-label {
        font-size: 0.75rem;
        color: #666;
        text-transform: uppercase;
        font-weight: 600;
        margin-bottom: 4px;
        letter-spacing: 0.5px;
    }
    
    .detail-value {
        font-size: 0.9rem;
        color: #333;
        font-weight: 500;
    }
    
    .type-badge {
        background: linear-gradient(135deg, #17a2b8, #20c997);
        color: white;
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 500;
        text-align: center;
        display: inline-block;
    }
    
    .card-actions {
        display: flex;
        gap: 8px;
        justify-content: flex-end;
        padding-top: 15px;
        border-top: 1px solid #f0f0f0;
    }
    
    .mobile-action-btn {
        flex: 1;
        padding: 10px 15px;
        border-radius: 8px;
        text-decoration: none;
        font-size: 0.85rem;
        font-weight: 500;
        text-align: center;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
    }
    
    .mobile-btn-preview {
        background: #6c757d;
        color: white;
    }
    
    .mobile-btn-preview:hover {
        background: #545b62;
        color: white;
        transform: translateY(-1px);
    }
    
    .mobile-btn-edit {
        background: #ffc107;
        color: #212529;
    }
    
    .mobile-btn-edit:hover {
        background: #e0a800;
        color: #212529;
        transform: translateY(-1px);
    }
    
    .mobile-btn-delete {
        background: #dc3545;
        color: white;
    }
    
    .mobile-btn-delete:hover {
        background: #c82333;
        color: white;
        transform: translateY(-1px);
    }
    
    /* Adjust search container for mobile */
    .header-actions .d-flex.align-items-center {
        flex-direction: column;
        align-items: stretch;
        gap: 15px;
    }
    
    .welcome-text {
        text-align: center;
        font-size: 1.1rem;
        color: #333;
        margin-bottom: 10px;
    }
    
    /* No results styling for mobile */
    .no-results {
        padding: 30px 20px;
        text-align: center;
    }
    
    .no-results i {
        font-size: 2rem !important;
        margin-bottom: 15px;
    }
    
    .no-results h5 {
        font-size: 1.1rem;
        margin-bottom: 10px;
    }
    
    .no-results p {
        font-size: 0.9rem;
        margin-bottom: 0;
    }
}

@media (max-width: 576px) {
    .main-container {
        margin: 5px;
        padding: 12px;
    }
    
    .page-title {
        font-size: 1.3rem;
    }
    
    .search-container {
        padding: 12px;
    }
    
    .experience-card {
        padding: 15px;
        margin-bottom: 12px;
    }
    
    .card-details {
        grid-template-columns: 1fr;
        gap: 10px;
    }
    
    .detail-item {
        padding: 8px 0;
    }
    
    .card-actions {
        flex-direction: column;
        gap: 8px;
    }
    
    .mobile-action-btn {
        padding: 12px;
        font-size: 0.9rem;
    }
    
    .card-name {
        font-size: 1rem;
        margin-left: 10px;
    }
    
    .card-sno {
        padding: 6px 10px;
        font-size: 0.8rem;
        min-width: 40px;
    }
}

/* Show mobile cards only on mobile */
@media (min-width: 769px) {
    .mobile-card-container {
        display: none;
    }
}

/* Custom scrollbar for mobile */
@media (max-width: 768px) {
    ::-webkit-scrollbar {
        width: 4px;
    }
    
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    
    ::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 2px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
}
@media (max-width: 768px) {
    /* Hide the default table on mobile */
    .table-container .table-responsive {
        display: none;
    }
    
    /* Create card-based layout for mobile */
    .mobile-card-container {
        display: block;
    }
    
    .experience-card {
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        margin-bottom: 15px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }
    
    .experience-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }
    
    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
        padding-bottom: 15px;
        border-bottom: 1px solid #f0f0f0;
    }
    
    .card-sno {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 8px 12px;
        border-radius: 20px;
        font-weight: bold;
        font-size: 0.9rem;
        min-width: 45px;
        text-align: center;
    }
    
    .card-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
        margin: 0;
        flex: 1;
        margin-left: 15px;
    }
    
    .card-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 12px;
        margin-bottom: 20px;
    }
    
    .detail-item {
        display: flex;
        flex-direction: column;
    }
    
    .detail-label {
        font-size: 0.75rem;
        color: #666;
        text-transform: uppercase;
        font-weight: 600;
        margin-bottom: 4px;
        letter-spacing: 0.5px;
    }
    
    .detail-value {
        font-size: 0.9rem;
        color: #333;
        font-weight: 500;
    }
    
    .type-badge {
        background: linear-gradient(135deg, #17a2b8, #20c997);
        color: white;
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 500;
        text-align: center;
        display: inline-block;
    }
    
    .card-actions {
        display: flex;
        gap: 8px;
        justify-content: flex-end;
        padding-top: 15px;
        border-top: 1px solid #f0f0f0;
    }
    
    .mobile-action-btn {
        flex: 1;
        padding: 10px 15px;
        border-radius: 8px;
        text-decoration: none;
        font-size: 0.85rem;
        font-weight: 500;
        text-align: center;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
    }
    
    .mobile-btn-preview {
        background: #6c757d;
        color: white;
    }
    
    .mobile-btn-preview:hover {
        background: #545b62;
        color: white;
        transform: translateY(-1px);
    }
    
    .mobile-btn-edit {
        background: #ffc107;
        color: #212529;
    }
    
    .mobile-btn-edit:hover {
        background: #e0a800;
        color: #212529;
        transform: translateY(-1px);
    }
    
    .mobile-btn-delete {
        background: #dc3545;
        color: white;
    }
    
    .mobile-btn-delete:hover {
        background: #c82333;
        color: white;
        transform: translateY(-1px);
    }
    
    /* Adjust search container for mobile */
    .header-actions .d-flex.align-items-center {
        flex-direction: column;
        align-items: stretch;
        gap: 15px;
    }
    
    .welcome-text {
        text-align: center;
        font-size: 1.1rem;
        color: #333;
        margin-bottom: 10px;
    }
    
    /* No results styling for mobile */
    .no-results {
        padding: 30px 20px;
        text-align: center;
    }
    
    .no-results i {
        font-size: 2rem !important;
        margin-bottom: 15px;
    }
    
    .no-results h5 {
        font-size: 1.1rem;
        margin-bottom: 10px;
    }
    
    .no-results p {
        font-size: 0.9rem;
        margin-bottom: 0;
    }
}

@media (max-width: 576px) {
    .main-container {
        margin: 5px;
        padding: 12px;
    }
    
    .page-title {
        font-size: 1.3rem;
    }
    
    .search-container {
        padding: 12px;
    }
    
    .experience-card {
        padding: 15px;
        margin-bottom: 12px;
    }
    
    .card-details {
        grid-template-columns: 1fr;
        gap: 10px;
    }
    
    .detail-item {
        padding: 8px 0;
    }
    
    .card-actions {
        flex-direction: column;
        gap: 8px;
    }
    
    .mobile-action-btn {
        padding: 12px;
        font-size: 0.9rem;
    }
    
    .card-name {
        font-size: 1rem;
        margin-left: 10px;
    }
    
    .card-sno {
        padding: 6px 10px;
        font-size: 0.8rem;
        min-width: 40px;
    }
}

/* Show mobile cards only on mobile */
@media (min-width: 769px) {
    .mobile-card-container {
        display: none;
    }
}

/* Custom scrollbar for mobile */
@media (max-width: 768px) {
    ::-webkit-scrollbar {
        width: 4px;
    }
    
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    
    ::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 2px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
}
    </style>

</head>

<body>
    <div class="container-fluid">
        <div class="main-container">
            <h1 class="page-title">
                <i class="fas fa-briefcase me-2"></i>
                Experience Management
            </h1>

            <div class="search-container">
                <div class="header-actions">
                    <div class="d-flex align-items-center gap-3">
                        <div class="input-group" style="width: 300px;">
                            <!-- <span class="input-group-text bg-white">
                                <i class="fas fa-search text-muted"></i>
                            </span> -->
                            
        <% let firstName = experienceList.length > 0 ? experienceList[0].name : ""; %>

                        <h4>Welcome <%= firstName %> </h4>    
                        </div>
                        <span id="resultCount" class="text-muted small"></span>
                    </div>
                    
                    <div class="d-flex gap-2">
                        <a href="/new" class="btn btn-custom btn-primary-custom">
                            <i class="fas fa-plus me-1"></i>Add New Experience
                        </a>
                        <form action="/logout" method="GET" class="d-inline">
                            <button type="submit" class="btn btn-custom btn-danger-custom">
                                <i class="fas fa-sign-out-alt me-1"></i>Logout
                            </button>
                        </form>
                    </div>
                </div>
            </div>

            <div class="table-container">
                <div class="table-responsive">
                    <table class="table table-custom">
                        <thead>
                            <tr>
                                <th><i class="fas fa-id-badge me-1"></i>S.No</th>
                                <th><i class="fas fa-user me-1"></i>Name</th>
                                <th><i class="fas fa-building me-1"></i>Company</th>
                                
                                <th><i class="fas fa-envelope me-1"></i>Domain</th>
                                <th><i class="fas fa-calendar me-1"></i>Year</th>
                                <th><i class="fas fa-tag me-1"></i>Type</th>
                                <th><i class="fas fa-eye me-1"></i>Preview</th>
                                <th><i class="fas fa-edit me-1"></i>Edit</th>
                               
                            </tr>
                        </thead>
                        <tbody id="experienceTableBody">
                            <% let sno=00;%>
                            <% experienceList.forEach((experience) => { %>
                                <tr>
                                    <td><strong> 0<%= ++sno  %></strong></td>
                                    <td><%= experience.name %></td>
                                    <td><%= experience.company %></td>
                                    
                                    <td><%= experience.domain %></td>
                                    <td><%= experience.year %></td>
                                    <td>
                                        <span class="badge bg-info"><%= experience.type %></span>
                                    </td>
                                    <td>
                                        <a href="/experience/<%= experience._id %>" target="_blank" 
                                           class="action-btn btn-preview">
                                            <i class="fas fa-external-link-alt"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <a href="/edit/<%=experience._id%>" class="action-btn btn-edit">
                                            <i class="fas fa-pencil-alt"></i>
                                        </a>
                                    </td>
                                    
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
<!-- Add this right after the closing </div> of table-container -->
<div class="mobile-card-container" id="mobileCardContainer" style="display: none;">
    <% let snomob = 0; %>
    <% experienceList.forEach((experience) => { %>
        <div class="experience-card">
            <div class="card-header">
                <div class="card-sno">0<%= ++snomob %></div>
                <h3 class="card-name"><%= experience.name %></h3>
            </div>
            <div class="card-details">
                <div class="detail-item">
                    <span class="detail-label">Company</span>
                    <span class="detail-value"><%= experience.company %></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Domain</span>
                    <span class="detail-value"><%= experience.domain %></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Year</span>
                    <span class="detail-value"><%= experience.year %></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Type</span>
                    <span class="type-badge"><%= experience.type %></span>
                </div>
            </div>
            <div class="card-actions">
                <a href="/experience/<%= experience._id %>" target="_blank" 
                   class="mobile-action-btn mobile-btn-preview">
                    <i class="fas fa-external-link-alt"></i>Preview
                </a>
                <a href="/edit/<%= experience._id %>" class="mobile-action-btn mobile-btn-edit">
                    <i class="fas fa-pencil-alt"></i>Edit
                </a>
            </div>
        </div>
    <% }) %>
</div>
            <div id="noResults" class="no-results" style="display: none;">
                <i class="fas fa-search fa-3x text-muted mb-3"></i>
                <h5>No experiences found</h5>
                <p>Try adjusting your search criteria</p>
            </div>
        </div>
    </div>

    <!-- Embed data from backend into JS -->
    <script>
    const experienceList = <%- JSON.stringify(experienceList) %>;
</script>

    <!-- Filter and render logic -->
<script>
    // Fixed and cleaned up JavaScript code
const tableBody = document.getElementById("experienceTableBody");
const searchInput = document.getElementById("searchInput");
const resultCount = document.getElementById("resultCount");
const noResults = document.getElementById("noResults");
const tableContainer = document.querySelector(".table-container");
const mobileContainer = document.getElementById('mobileCardContainer');

// Parse the experience data safely
let allExperiences = [];
try {
    allExperiences = typeof experienceList !== 'undefined' ? experienceList : [];
} catch (e) {
    console.log('experienceList not found, using empty array');
    allExperiences = [];
}

function updateResultCount(count) {
    if (resultCount) {
        resultCount.textContent = `${count} result${count !== 1 ? 's' : ''} found`;
    }
}

function renderDesktopTable(experiences) {
    if (!tableBody) return;
    
    tableBody.innerHTML = experiences.map((experience, index) => `
        <tr>
            <td><strong>0${index + 1}</strong></td>
            <td>${experience.name || ''}</td>
            <td>${experience.company || ''}</td>
            <td>${experience.domain || ''}</td>
            <td>${experience.year || ''}</td>
            <td>
                <span class="badge bg-info">${experience.type || ''}</span>
            </td>
            <td>
                <a href="/experience/${experience._id}" target="_blank" 
                   class="action-btn btn-preview">
                    <i class="fas fa-external-link-alt"></i>
                </a>
            </td>
            <td>
                <a href="/edit/${experience._id}" class="action-btn btn-edit">
                    <i class="fas fa-pencil-alt"></i>
                </a>
            </td>
        </tr>
    `).join('');
}

function renderMobileCards(experiences) {
    if (!mobileContainer) return;
    
    mobileContainer.innerHTML = experiences.map((experience, index) => `
        <div class="experience-card">
            <div class="card-header">
                <div class="card-sno">0${index + 1}</div>
                <h3 class="card-name">${experience.name || ''}</h3>
            </div>
            <div class="card-details">
                <div class="detail-item">
                    <span class="detail-label">Company</span>
                    <span class="detail-value">${experience.company || ''}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Domain</span>
                    <span class="detail-value">${experience.domain || ''}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Year</span>
                    <span class="detail-value">${experience.year || ''}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Type</span>
                    <span class="type-badge">${experience.type || ''}</span>
                </div>
            </div>
            <div class="card-actions">
                <a href="/experience/${experience._id}" target="_blank" 
                   class="mobile-action-btn mobile-btn-preview">
                    <i class="fas fa-external-link-alt"></i>Preview
                </a>
                <a href="/edit/${experience._id}" class="mobile-action-btn mobile-btn-edit">
                    <i class="fas fa-pencil-alt"></i>Edit
                </a>
            </div>
        </div>
    `).join('');

    // Add animations to newly created cards
    const cards = mobileContainer.querySelectorAll('.experience-card');
    cards.forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        setTimeout(() => {
            card.style.transition = 'all 0.3s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, index * 100);
    });
}

function handleResponsiveView() {
    if (!tableContainer || !mobileContainer) return;
    
    if (window.innerWidth <= 768) {
        tableContainer.style.display = 'none';
        mobileContainer.style.display = 'block';
    } else {
        tableContainer.style.display = 'block';
        mobileContainer.style.display = 'none';
    }
}

function renderExperiences(experiences) {
    if (experiences.length === 0) {
        if (tableContainer) tableContainer.style.display = 'none';
        if (mobileContainer) mobileContainer.style.display = 'none';
        if (noResults) noResults.style.display = 'block';
        updateResultCount(0);
        return;
    }

    if (noResults) noResults.style.display = 'none';
    updateResultCount(experiences.length);

    // Show appropriate container based on screen size
    if (window.innerWidth <= 768) {
        if (tableContainer) tableContainer.style.display = 'none';
        if (mobileContainer) mobileContainer.style.display = 'block';
        renderMobileCards(experiences);
    } else {
        if (tableContainer) tableContainer.style.display = 'block';
        if (mobileContainer) mobileContainer.style.display = 'none';
        renderDesktopTable(experiences);
    }
}

// Search functionality
if (searchInput) {
    searchInput.addEventListener("input", () => {
        const keyword = searchInput.value.trim().toLowerCase();

        if (!keyword) {
            renderExperiences(allExperiences);
            return;
        }

        const filtered = allExperiences.filter(item =>
            (item.name && item.name.toLowerCase().includes(keyword)) ||
            (item.company && item.company.toLowerCase().includes(keyword)) ||
            (item.domain && item.domain.toLowerCase().includes(keyword)) ||
            (item.type && item.type.toLowerCase().includes(keyword))
        );

        renderExperiences(filtered);
    });
}

function confirmDelete(id) {
    if (confirm('Are you sure you want to delete this experience? This action cannot be undone.')) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/delete/${id}`;
        document.body.appendChild(form);
        form.submit();
    }
}

// Initialize everything when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    // Initial responsive check
    handleResponsiveView();
    
    // Initialize result count
    updateResultCount(allExperiences.length);
    
    // Initial render
    renderExperiences(allExperiences);
    
    // Add animations to existing desktop table rows
    const rows = document.querySelectorAll('tbody tr');
    rows.forEach((row, index) => {
        row.style.opacity = '0';
        row.style.transform = 'translateY(20px)';
        setTimeout(() => {
            row.style.transition = 'all 0.3s ease';
            row.style.opacity = '1';
            row.style.transform = 'translateY(0)';
        }, index * 50);
    });
});

// Handle resize events
window.addEventListener('resize', () => {
    handleResponsiveView();
    // Re-render current view after resize
    const currentKeyword = searchInput ? searchInput.value.trim().toLowerCase() : '';
    if (currentKeyword) {
        const filtered = allExperiences.filter(item =>
            (item.name && item.name.toLowerCase().includes(currentKeyword)) ||
            (item.company && item.company.toLowerCase().includes(currentKeyword)) ||
            (item.domain && item.domain.toLowerCase().includes(currentKeyword)) ||
            (item.type && item.type.toLowerCase().includes(currentKeyword))
        );
        renderExperiences(filtered);
    } else {
        renderExperiences(allExperiences);
    }
});
</script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>