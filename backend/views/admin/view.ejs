<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Experience Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <style>
        :root {
            --primary: #2563eb;
            --primary-light: #3b82f6;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-500: #6b7280;
            --gray-700: #374151;
            --gray-900: #111827;
        }

        body {
            background-color: var(--gray-50);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            color: var(--gray-900);
        }

        .dashboard-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        .dashboard-header {
            background: white;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
            border: 1px solid var(--gray-200);
        }

        .dashboard-title {
            font-size: 2rem;
            font-weight: 700;
            color: var(--gray-900);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .dashboard-subtitle {
            color: var(--gray-500);
            margin: 0.5rem 0 0 0;
            font-size: 1rem;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--gray-200);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            cursor: pointer;
        }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .stat-card.active {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: var(--gray-500);
            font-size: 0.875rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.025em;
        }

        .stat-total .stat-number { color: var(--primary); }
        .stat-pending .stat-number { color: var(--warning); }
        .stat-accepted .stat-number { color: var(--success); }
        .stat-denied .stat-number { color: var(--danger); }

        .controls-section {
            background: white;
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--gray-200);
            margin-bottom: 2rem;
        }

        .search-container {
            position: relative;
            flex: 1;
            max-width: 400px;
        }

        .search-input {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 2.5rem;
            border: 2px solid var(--gray-200);
            border-radius: 12px;
            font-size: 0.875rem;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
            background: var(--gray-50);
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            background: white;
        }

        .search-icon {
            position: absolute;
            left: 0.875rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray-500);
            font-size: 0.875rem;
        }

        .filter-buttons {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 0.5rem 1rem;
            border: 2px solid var(--gray-200);
            background: white;
            color: var(--gray-700);
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .filter-btn:hover {
            border-color: var(--primary);
            color: var(--primary);
        }

        .filter-btn.active {
            background: var(--primary);
            border-color: var(--primary);
            color: white;
        }

        .logout-btn {
            background: var(--gray-100);
            border: 2px solid var(--gray-200);
            color: var(--gray-700);
            padding: 0.75rem 1.5rem;
            border-radius: 12px;
            font-weight: 500;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logout-btn:hover {
            background: var(--gray-200);
            color: var(--gray-900);
            transform: translateY(-1px);
        }

        .table-container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--gray-200);
            overflow: hidden;
        }

        .experience-table {
            margin: 0;
        }

        .experience-table thead th {
            background: var(--gray-50);
            border: none;
            padding: 1rem;
            font-weight: 600;
            color: var(--gray-700);
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.025em;
            border-bottom: 2px solid var(--gray-200);
        }

        .experience-table tbody td {
            padding: 1rem;
            border: none;
            border-bottom: 1px solid var(--gray-100);
            vertical-align: middle;
        }

        .experience-table tbody tr:hover {
            background: var(--gray-50);
        }

        .experience-table tbody tr:last-child td {
            border-bottom: none;
        }

        .action-btn {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-size: 0.875rem;
            font-weight: 500;
            border: none;
            cursor: pointer;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.375rem;
            text-decoration: none;
        }

        .btn-preview {
            background: var(--gray-100);
            color: var(--gray-700);
        }

        .btn-preview:hover {
            background: var(--gray-200);
            color: var(--gray-900);
            text-decoration: none;
        }

        .btn-accept {
            background: var(--success);
            color: white;
        }

        .btn-accept:hover {
            background: #059669;
            transform: translateY(-1px);
        }

        .btn-deny {
            background: var(--warning);
            color: white;
        }

        .btn-deny:hover {
            background: #d97706;
            transform: translateY(-1px);
        }

        .btn-delete {
            background: var(--danger);
            color: white;
        }

        .btn-delete:hover {
            background: #dc2626;
            transform: translateY(-1px);
        }

        .type-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.025em;
        }

        .type-internship {
            background: rgba(37, 99, 235, 0.1);
            color: var(--primary);
        }

        .type-project {
            background: rgba(16, 185, 129, 0.1);
            color: var(--success);
        }

        .type-training {
            background: rgba(245, 158, 11, 0.1);
            color: var(--warning);
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.025em;
        }

        .status-pending {
            background: rgba(245, 158, 11, 0.1);
            color: var(--warning);
        }

        .status-accepted {
            background: rgba(16, 185, 129, 0.1);
            color: var(--success);
        }

        .status-denied {
            background: rgba(239, 68, 68, 0.1);
            color: var(--danger);
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: var(--gray-500);
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.8);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .loading-spinner {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            color: var(--primary);
        }

        @media (max-width: 768px) {
            .dashboard-container {
                padding: 1rem;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 1rem;
            }
            
            .controls-section .row {
                flex-direction: column;
                gap: 1rem;
            }
            
            .action-btn {
                padding: 0.375rem 0.75rem;
                font-size: 0.8125rem;
            }

            .filter-buttons {
                justify-content: center;
            }
        }

        /* Smooth transitions */
        * {
            transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
        }
    </style>
</head>

<body>
    <div class="dashboard-container">
        <!-- Header -->
        <div class="dashboard-header">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <h1 class="dashboard-title">
                        <i class="fas fa-chart-line"></i>
                        Experience Dashboard
                    </h1>
                    <p class="dashboard-subtitle">Manage and review student experience submissions</p>
                </div>
                <form action="/logout" method="get">
                    <button type="submit" class="logout-btn">
                        <i class="fas fa-sign-out-alt"></i>
                        Logout
                    </button>
                </form>
            </div>
        </div>

        <!-- Statistics -->
        <div class="stats-grid">
            <div class="stat-card stat-total" data-filter="all">
                <div class="stat-number" id="totalCount"><%= experienceList ? experienceList.length : 0 %></div>
                <div class="stat-label">Total Submissions</div>
            </div>
            <div class="stat-card stat-pending" data-filter="pending">
                <div class="stat-number" id="pendingCount">
                    <%= experienceList ? experienceList.filter(exp => !exp.status || exp.status === 'pending').length : 0 %>
                </div>
                <div class="stat-label">Pending Review</div>
            </div>
            <div class="stat-card stat-accepted" data-filter="accepted">
                <div class="stat-number" id="acceptedCount">
                    <%= experienceList ? experienceList.filter(exp => exp.status === 'accepted').length : 0 %>
                </div>
                <div class="stat-label">Accepted</div>
            </div>
            <div class="stat-card stat-denied" data-filter="denied">
                <div class="stat-number" id="deniedCount">
                    <%= experienceList ? experienceList.filter(exp => exp.status === 'denied').length : 0 %>
                </div>
                <div class="stat-label">Denied</div>
            </div>
        </div>

        <!-- Controls -->
        <div class="controls-section">
            <div class="row align-items-center g-3">
                <div class="col-md-6">
                    <div class="search-container">
                        <input type="text" id="searchInput" class="search-input" 
                               placeholder="Search by registration number, name, or company...">
                        <i class="fas fa-search search-icon"></i>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="filter-buttons">
                        <button class="filter-btn active" data-filter="all">All</button>
                        <button class="filter-btn" data-filter="pending">Pending</button>
                        <button class="filter-btn" data-filter="accepted">Accepted</button>
                        <button class="filter-btn" data-filter="denied">Denied</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Table -->
        <div class="table-container">
            <table class="table experience-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-id-badge me-2"></i>Registration</th>
                        <th><i class="fas fa-user me-2"></i>Student</th>
                        <th><i class="fas fa-envelope me-2"></i>Email</th>
                        <th><i class="fas fa-building me-2"></i>Company</th>
                        <th><i class="fas fa-calendar me-2"></i>Year</th>
                        <th><i class="fas fa-tag me-2"></i>Type</th>
                        <th><i class="fas fa-info-circle me-2"></i>Status</th>
                        <th><i class="fas fa-eye me-2"></i>Preview</th>
                        <th><i class="fas fa-tasks me-2"></i>Actions</th>
                    </tr>
                </thead>
                <tbody id="experienceTableBody">
                    <% if (experienceList && experienceList.length > 0) { %>
                        <% experienceList.forEach((experience) => { %>
                            <tr data-status="<%= experience.status || 'pending' %>">
                                <td><strong><%= experience.regno %></strong></td>
                                <td><%= experience.name %></td>
                                <td class="text-muted"><%= experience.email %></td>
                                <td><%= experience.company %></td>
                                <td><%= experience.year %></td>
                                <td>
                                    <span class="type-badge type-<%= experience.type ? experience.type.toLowerCase() : 'internship' %>">
                                        <%= experience.type || 'Internship' %>
                                    </span>
                                </td>
                                <td>
                                    <span class="status-badge status-<%= experience.status || 'pending' %>">
                                        <%= experience.status || 'pending' %>
                                    </span>
                                </td>
                                <td>
                                    <a href="<%= experience.readLink %>" target="_blank" class="action-btn btn-preview">
                                        <i class="fas fa-external-link-alt"></i>
                                        View
                                    </a>
                                </td>
                                <td>
                                    <div class="d-flex gap-2">
                                        <% if (!experience.status || experience.status === 'pending') { %>
                                            <form action="/admin/experiences/<%= experience._id %>?_method=PUT" method="POST" 
                                                  style="display: inline;" onsubmit="return confirmAction('accept', this)">
                                                <input type="hidden" name="status" value="accepted">
                                                <button type="submit" class="action-btn btn-accept" title="Accept">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </form>
                                            <form action="/admin/experiences/d/<%= experience._id %>?_method=PUT" method="POST" 
                                                  style="display: inline;" onsubmit="return confirmAction('deny', this)">
                                                <input type="hidden" name="status" value="denied">
                                                <button type="submit" class="action-btn btn-deny" title="Deny">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </form>
                                        <% } %>
                                        <form action="/admin/experiences/<%= experience._id %>?_method=DELETE" method="POST" 
                                              style="display: inline;" onsubmit="return confirmAction('delete', this)">
                                            <button type="submit" class="action-btn btn-delete" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <tr>
                            <td colspan="9" class="empty-state">
                                <i class="fas fa-inbox"></i>
                                <h5>No Experience Submissions</h5>
                                <p class="mb-0">There are no experience submissions to display at this time.</p>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <span>Processing...</span>
        </div>
    </div>

    <!-- Embed data from backend into JS -->
    <script>
        const allExperiences = <%- JSON.stringify(experienceList || []) %>;
        const originalTableBody = document.getElementById("experienceTableBody").innerHTML;
    </script>

    <!-- Enhanced search and interaction logic -->
    <script>
        const tableBody = document.getElementById("experienceTableBody");
        const searchInput = document.getElementById("searchInput");
        const loadingOverlay = document.getElementById("loadingOverlay");
        const filterButtons = document.querySelectorAll('.filter-btn');
        const statCards = document.querySelectorAll('.stat-card');
        
        let currentFilter = 'all';
        let currentSearch = '';

        // Filter functionality
        function filterExperiences() {
            let filtered = allExperiences;
            
            // Apply status filter
            if (currentFilter !== 'all') {
                filtered = filtered.filter(exp => {
                    const status = exp.status || 'pending';
                    return status === currentFilter;
                });
            }
            
            // Apply search filter
            if (currentSearch) {
                filtered = filtered.filter(item =>
                    item.regno.toLowerCase().includes(currentSearch) ||
                    item.name.toLowerCase().includes(currentSearch) ||
                    item.email.toLowerCase().includes(currentSearch) ||
                    item.company.toLowerCase().includes(currentSearch)
                );
            }
            
            renderTable(filtered);
        }

        // Render table with filtered data
        function renderTable(experiences) {
            if (experiences.length === 0) {
                const message = currentSearch ? 
                    'No experiences match your search criteria.' : 
                    currentFilter === 'all' ? 
                    'No experience submissions to display.' :
                    `No ${currentFilter} experiences found.`;
                    
                tableBody.innerHTML = `
                    <tr>
                        <td colspan="9" class="empty-state">
                            <i class="fas fa-search"></i>
                            <h5>No Results Found</h5>
                            <p class="mb-0">${message}</p>
                        </td>
                    </tr>
                `;
                return;
            }

            tableBody.innerHTML = experiences.map(experience => {
                const status = experience.status || 'pending';
                const actionButtons = (status === 'pending') ? `
                    <form action="/admin/experiences/${experience._id}?_method=PUT" method="POST" 
                          style="display: inline;" onsubmit="return confirmAction('accept', this)">
                        <input type="hidden" name="status" value="accepted">
                        <button type="submit" class="action-btn btn-accept" title="Accept">
                            <i class="fas fa-check"></i>
                        </button>
                    </form>
                    <form action="/admin/experiences/d/${experience._id}?_method=PUT" method="POST" 
                          style="display: inline;" onsubmit="return confirmAction('deny', this)">
                        <input type="hidden" name="status" value="denied">
                        <button type="submit" class="action-btn btn-deny" title="Deny">
                            <i class="fas fa-times"></i>
                        </button>
                    </form>
                ` : '';

                return `
                    <tr data-status="${status}">
                        <td><strong>${experience.regno}</strong></td>
                        <td>${experience.name}</td>
                        <td class="text-muted">${experience.email}</td>
                        <td>${experience.company}</td>
                        <td>${experience.year}</td>
                        <td>
                            <span class="type-badge type-${(experience.type || 'internship').toLowerCase()}">
                                ${experience.type || 'Internship'}
                            </span>
                        </td>
                        <td>
                            <span class="status-badge status-${status}">
                                ${status}
                            </span>
                        </td>
                        <td>
                            <a href="${experience.readLink}" target="_blank" class="action-btn btn-preview">
                                <i class="fas fa-external-link-alt"></i>
                                View
                            </a>
                        </td>
                        <td>
                            <div class="d-flex gap-2">
                                ${actionButtons}
                                <form action="/admin/experiences/${experience._id}?_method=DELETE" method="POST" 
                                      style="display: inline;" onsubmit="return confirmAction('delete', this)">
                                    <button type="submit" class="action-btn btn-delete" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                `;
            }).join('');
        }

        // Search functionality
        searchInput.addEventListener("input", (e) => {
            currentSearch = e.target.value.trim().toLowerCase();
            filterExperiences();
        });

        // Filter button functionality
        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                filterButtons.forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');
                currentFilter = button.dataset.filter;
                filterExperiences();
            });
        });

        // Stat card click functionality
        statCards.forEach(card => {
            card.addEventListener('click', () => {
                const filter = card.dataset.filter;
                if (filter) {
                    statCards.forEach(c => c.classList.remove('active'));
                    card.classList.add('active');
                    
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    const targetButton = document.querySelector(`[data-filter="${filter}"]`);
                    if (targetButton) {
                        targetButton.classList.add('active');
                    }
                    
                    currentFilter = filter;
                    filterExperiences();
                }
            });
        });

        // Enhanced confirmation with loading states
        function confirmAction(action, form) {
            const messages = {
                'accept': 'Accept this experience submission?',
                'deny': 'Deny this experience submission?',
                'delete': 'Permanently delete this experience submission?\n\nThis action cannot be undone.'
            };
            
            if (confirm(messages[action])) {
                showLoading();
                const button = form.querySelector('button[type="submit"]');
                const originalContent = button.innerHTML;
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                // Auto-hide loading after 5 seconds if no response
                setTimeout(() => {
                    hideLoading();
                    button.disabled = false;
                    button.innerHTML = originalContent;
                }, 5000);
                
                return true;
            }
            return false;
        }

        function showLoading() {
            loadingOverlay.style.display = 'flex';
        }

        function hideLoading() {
            loadingOverlay.style.display = 'none';
        }

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'f') {
                e.preventDefault();
                searchInput.focus();
            }
            if (e.key === 'Escape') {
                searchInput.value = '';
                currentSearch = '';
                filterExperiences();
            }
        });

        // Initialize on load
        document.addEventListener('DOMContentLoaded', function() {
            // Add subtle animations
            const cards = document.querySelectorAll('.stat-card, .table-container, .controls-section, .dashboard-header');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });

        // Update stats dynamically
        function updateStats() {
            const total = allExperiences.length;
            const pending = allExperiences.filter(exp => !exp.status || exp.status === 'pending').length;
            const accepted = allExperiences.filter(exp => exp.status === 'accepted').length;
            const denied = allExperiences.filter(exp => exp.status === 'denied').length;

            document.getElementById('totalCount').textContent = total;
            document.getElementById('pendingCount').textContent = pending;
            document.getElementById('acceptedCount').textContent = accepted;
            document.getElementById('deniedCount').textContent = denied;
        }
    </script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
</body>

</html>